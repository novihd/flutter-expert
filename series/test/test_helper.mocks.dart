// Mocks generated by Mockito 5.3.2 from annotations
// in series/test/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i20;
import 'dart:typed_data' as _i21;

import 'package:core/core.dart' as _i7;
import 'package:core/features/series/domain/entities/season_detail.dart'
    as _i19;
import 'package:core/features/series/domain/entities/series.dart' as _i8;
import 'package:core/features/series/domain/entities/series_detail.dart'
    as _i13;
import 'package:core/features/series/domain/repositories/series_repository.dart'
    as _i2;
import 'package:core/features/series/domain/usecases/get_now_playing_series.dart'
    as _i5;
import 'package:core/features/series/domain/usecases/get_popular_series.dart'
    as _i9;
import 'package:core/features/series/domain/usecases/get_series_detail.dart'
    as _i12;
import 'package:core/features/series/domain/usecases/get_series_recommendations.dart'
    as _i11;
import 'package:core/features/series/domain/usecases/get_series_season.dart'
    as _i18;
import 'package:core/features/series/domain/usecases/get_top_rated_series.dart'
    as _i10;
import 'package:core/features/series/domain/usecases/get_watchlist_series.dart'
    as _i14;
import 'package:core/features/series/domain/usecases/get_watchlist_series_status.dart'
    as _i15;
import 'package:core/features/series/domain/usecases/remove_watchlist_series.dart'
    as _i17;
import 'package:core/features/series/domain/usecases/save_watchlist_series.dart'
    as _i16;
import 'package:dartz/dartz.dart' as _i3;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSeriesRepository_0 extends _i1.SmartFake
    implements _i2.SeriesRepository {
  _FakeSeriesRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetNowPlayingSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingSeries extends _i1.Mock
    implements _i5.GetNowPlayingSeries {
  MockGetNowPlayingSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>);
}

/// A class which mocks [GetPopularSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularSeries extends _i1.Mock implements _i9.GetPopularSeries {
  MockGetPopularSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>);
}

/// A class which mocks [GetTopRatedSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedSeries extends _i1.Mock implements _i10.GetTopRatedSeries {
  MockGetTopRatedSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>);
}

/// A class which mocks [GetSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesRecommendations extends _i1.Mock
    implements _i11.GetSeriesRecommendations {
  MockGetSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>);
}

/// A class which mocks [GetSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesDetail extends _i1.Mock implements _i12.GetSeriesDetail {
  MockGetSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i13.SeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, _i13.SeriesDetail>>.value(
                _FakeEither_1<_i7.Failure, _i13.SeriesDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, _i13.SeriesDetail>>);
}

/// A class which mocks [GetWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistSeries extends _i1.Mock
    implements _i14.GetWatchlistSeries {
  MockGetWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>> execute() =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.Series>>(
          this,
          Invocation.method(
            #execute,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.Series>>>);
}

/// A class which mocks [GetWatchlistSeriesStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistSeriesStatus extends _i1.Mock
    implements _i15.GetWatchlistSeriesStatus {
  MockGetWatchlistSeriesStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<bool> execute(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [SaveWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistSeries extends _i1.Mock
    implements _i16.SaveWatchlistSeries {
  MockSaveWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i13.SeriesDetail? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [series],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [series],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistSeries extends _i1.Mock
    implements _i17.RemoveWatchlistSeries {
  MockRemoveWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i13.SeriesDetail? series) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [series],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [series],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [GetSeriesSeason].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeriesSeason extends _i1.Mock implements _i18.GetSeriesSeason {
  MockGetSeriesSeason() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SeriesRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeSeriesRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.SeriesRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i19.SeasonDetail>>> execute(
    String? tvId,
    String? numberSeason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            tvId,
            numberSeason,
          ],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i19.SeasonDetail>>>.value(
                _FakeEither_1<_i7.Failure, List<_i19.SeasonDetail>>(
          this,
          Invocation.method(
            #execute,
            [
              tvId,
              numberSeason,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i19.SeasonDetail>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i20.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i21.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i21.Uint8List>.value(_i21.Uint8List(0)),
      ) as _i6.Future<_i21.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_3(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
